body {
    font-family: 'Poppins';
}

.cabecalho {
    display: flex;
    /*alinhar horizontalmente*/
    justify-content: space-between;
    /*colocar espaço entre dois elementos*/
    padding: 30px;
    max-width: 1440px;
    margin: 0 auto;
    /*o primeiro valor se refere ao topo e auto as laterais, auto centraliza automaticamente*/

}

.cabecalho .logo {
    width: 65px;
}

.cabecalho .menu {

    display: flex;
    height: 100%;
    align-items: center;
}

.cabecalho nav li a {
    font-weight: bold;
    color: #ffffff;
    font-size: 25px;
    padding: 10px 20px;
    /*o primeiro valor se refere ao topo e o segundo aos lados*/
    border-radius: 50px;
    /*deixar as bordas arredondadas*/
    transition: 0.2s;
}

/*.cabecalho é a classe, nav,li e a são as tag's dentro do cabecalho. A ordem como se escreve os seletores é como se navegasse até onde se deseja editar*/
/*aula foi pausada em 1h02m*/
/*agora vamos fazer com que aja uma mudança ao possar o mouse encima do link*/
.cabecalho nav li a:hover {
    background-color: #d5011d;

}

/* é um pseudo classe para informar que haverá mudança ao passar mouse encima. hover=sobrevoar*/
.container {
    max-width: 1440px;
    margin: 0 auto;
    display: flex;
    height: calc(100vh - 132px);
    /* vh é altura da viewport, no que se refere a porta */
    align-items: center;
    padding: 0 30px 30px;
}

.container .imagem-titulo {
    max-width: 500px;
    /* colocar somente um valor o code mantém a proporção */
}

.container .descricao {
    color: #a8adb7;
    width: 85%;
    font-size: 18px;
    margin: 30px 0;
}

.container .botao-trailer {
    background-color: #ff0021;
    color: #ffffff;
    padding: 15px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    border: none;
    text-transform: uppercase;
    transition: 0.5s all ease-in-out;
}

.container .botao-trailer:hover {
    transform: scale(1.1);
}

.fundo-video {
    background-color: #d5011d;
    position: absolute;
    /* position: absolute tira o objeto da mesma camada que estava os outros, como no photoshop. Várias pessoas usam o position para dar posição aos elementos da página, mas não é aconselhável  (segundo os gêmeos)*/
    z-index: -1;
    /*posiciona ca camada no valor -1 do eixo Z, no plano cartesiano*/
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    /* esconder oque transbordou na imagem, ou seja, tirar a barra de rolagem que ficou visível */
    display: flex;
    justify-content: center;
}

.fundo-video .video {
    height: 100vh;
}

/*agora vamos criar um elemento, no css, para ficar opaco e escurecendo o vídeo*/
.fundo-video::after {
    content: "";
    height: 100vh;
    width: 100vw;
    position: absolute;
    top: 0;
    left: 0;
    /*poderia simplesmente acrescentar "opacit", mas tem uma forma de aplicar opacidade radial clareando somente o centro*/

    background: rgb(0,0,0);
    background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.8) 50%, rgba(0,0,0,1) 100%);
}
.modal {
    background-color: rgba(52, 52, 50, 0.7);
    position: fixed;
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
opacity: 0; /*na minha opinião, apenas visibility já é o bastante, não precisa opacity*/
visibility: hidden;
}
.conteudo-modal {
    display: flex;/* botar um do lado do outro*/
    justify-content: center;
    align-items: center;
    flex-direction: column;
    height: 100vh;
    border-radius: 5px;
    gap: 15px;/*espaçamento entre os elementos, ou seja, entre o x e o vídeo*/

}
.fechar-modal {
    background-color: #ffffff;
    color: #f03a17;
    font-weight: bold;
    font-size: 20px;
    width: 40px;
    text-align: center;
    cursor: pointer;
    border-radius: 5px;
}
.modal iframe {
    border-width: 0;
    width: 640px;
    height: 360px;

}
.modal.aberto {
    opacity: 1;
    visibility: visible;
}